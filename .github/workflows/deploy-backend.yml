name: Deploy Backend to DigitalOcean

on:
  push:
    branches: [main]
    paths:
      - 'backend/**'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Copy backend files to Droplet
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          source: 'backend/*'
          target: '/home/parsons/backend/'
          strip_components: 1
          overwrite: true
          rm: false

      - name: Deploy and restart service
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          command_timeout: 5m
          script: |
            cd /home/parsons/backend

            # Simple approach: just restart the service
            echo "Restarting parsons service..."
            systemctl restart parsons

            # Wait for service to start
            sleep 5

            # Check if service is running
            if systemctl is-active --quiet parsons; then
              echo "✅ Service restarted successfully"
            else
              echo "❌ Service failed to start"
              systemctl status parsons --no-pager
              exit 1
            fi

            # Update dependencies if needed
            echo "Updating dependencies..."
            source venv/bin/activate
            pip install -q -r requirements.txt

            echo "Updating environment..."
            echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" > .env
            echo "PORT=8000" >> .env
            echo "ENVIRONMENT=production" >> .env

            # Final restart with new config
            echo "Final restart with updated config..."
            systemctl restart parsons
            sleep 5

            # Verify everything is working
            if systemctl is-active --quiet parsons; then
              echo "✅ Deployment successful"
              systemctl status parsons --no-pager
              
              # Test API
              if curl -s https://parsons-tutor.dedyn.io/ > /dev/null; then
                echo "✅ API is responding"
              else
                echo "⚠️ Service running but API not responding"
              fi
            else
              echo "❌ Final restart failed"
              journalctl -u parsons --no-pager -n 30
              exit 1
            fi
